# Go build stage
FROM golang:1.21-alpine as builder

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY . .

RUN CGO_ENABLED=0 GOOS=linux go build -trimpath -ldflags "-s -w" -o /execution_service execution_service.go
RUN CGO_ENABLED=0 GOOS=linux go build -trimpath -ldflags "-s -w" -o /feed_handler feed_handler.go
RUN CGO_ENABLED=0 GOOS=linux go build -trimpath -ldflags "-s -w" -o /ops_api ops_api.go
RUN CGO_ENABLED=0 GOOS=linux go build -trimpath -ldflags "-s -w" -o /reporter reporter.go
RUN CGO_ENABLED=0 GOOS=linux go build -trimpath -ldflags "-s -w" -o /risk_state risk_state.go
RUN CGO_ENABLED=0 GOOS=linux go build -trimpath -ldflags "-s -w" -o /replay_service replay_service.go

# App stage
FROM gcr.io/distroless/static-debian11:nonroot

WORKDIR /app

COPY --from=builder /execution_service .
COPY --from=builder /feed_handler .
COPY --from=builder /ops_api .
COPY --from=builder /reporter .
COPY --from=builder /risk_state .
COPY --from=builder /replay_service .
